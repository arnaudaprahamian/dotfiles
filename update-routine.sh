#!/bin/bash

# --- Configuration ---
# Liste des dossiers o√π ex√©cuter 'git pull'
# Assurez-vous que ces dossiers existent et sont des d√©p√¥ts Git.
GIT_DIRS=("$HOME/.pyenv" "$HOME/.rbenv" "$HOME/.goenv" "$HOME/.oh-my-zsh" "$HOME/.phpenv" "$HOME/.tfenv")
# Vous pouvez ajouter d'autres chemins si n√©cessaire, par exemple "$HOME/mon_projet_git"
# N'oubliez pas d'enlever les chemins que vous n'avez pas.

# --- Fonction pour les mises √† jour Apt ---
update_apt() {
    echo "========================================="
    echo "üöÄ D√©marrage de la mise √† jour des paquets APT..."
    echo "========================================="
    # Lancement des commandes apt
    sudo apt update && sudo apt upgrade -y
    if [ $? -eq 0 ]; then
        echo "‚úÖ Mises √† jour APT termin√©es avec succ√®s."
    else
        echo "‚ùå Erreur lors des mises √† jour APT. Veuillez v√©rifier les messages ci-dessus."
    fi
}

# --- Fonction pour les mises √† jour Homebrew ---
update_brew() {
    # V√©rifie si Homebrew est install√©
    if command -v brew &> /dev/null; then
        echo "========================================="
        echo "üç∫ D√©marrage de la mise √† jour Homebrew (brew)..."
        echo "========================================="
        # Lancement des commandes brew
        brew update
        brew upgrade
        if [ $? -eq 0 ]; then
            echo "‚úÖ Mises √† jour Homebrew termin√©es avec succ√®s."
        else
            echo "‚ö†Ô∏è Avertissement : Probl√®me potentiel avec les mises √† jour Homebrew."
        fi
    else
        echo "========================================="
        echo "‚ûñ Homebrew n'est pas trouv√©. Saut de l'√©tape Homebrew."
        echo "========================================="
    fi
}

# --- Fonction pour les git pull des d√©p√¥ts locaux ---
update_git_repos() {
    echo "========================================="
    echo "‚öôÔ∏è D√©marrage de la mise √† jour des d√©p√¥ts Git locaux..."
    echo "========================================="
    local errors=0
    for dir in "${GIT_DIRS[@]}"; do
        if [ -d "$dir" ] && [ -d "$dir/.git" ]; then
            echo "-> Mise √† jour de $dir..."
            (cd "$dir" && git pull)
            if [ $? -ne 0 ]; then
                echo "‚ùå Erreur de 'git pull' dans $dir."
                errors=$((errors + 1))
            fi
        elif [ -d "$dir" ]; then
             echo "‚ö†Ô∏è $dir existe mais ne semble pas √™tre un d√©p√¥t Git. Ignor√©."
        else
            echo "‚ö†Ô∏è Le chemin $dir n'existe pas. Ignor√©."
        fi
    done

    if [ $errors -eq 0 ]; then
        echo "‚úÖ Tous les d√©p√¥ts Git configur√©s ont √©t√© mis √† jour avec succ√®s (si existants)."
    else
        echo "‚ö†Ô∏è $errors erreur(s) de 'git pull' d√©tect√©e(s)."
    fi
}

# --- Ex√©cution S√©quentielle des Fonctions ---
main() {
    echo "========================================="
    echo "üîÑ D√©but de la Routine de Mise √† Jour Compl√®te sur Ubuntu/WSL"
    echo "========================================="

    update_apt

    update_brew

    update_git_repos

    echo "========================================="
    echo "üéâ Routine de Mise √† Jour Compl√®te Termin√©e !"
    echo "========================================="
}

# Lancement de la fonction principale
main